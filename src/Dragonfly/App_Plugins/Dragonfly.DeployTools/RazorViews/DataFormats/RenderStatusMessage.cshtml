@model StatusMessage

@if (Model != null)
{
	<style>
		.alert {
			padding: 5px;
		}

			.alert h4,
			.alert p {
				font-size: 1.25rem;
			}

	</style>
	RenderMessage(Model);
}

@functions
{
	private void RenderMessage(StatusMessage Msg)
	{
		var alertClass = Msg.Success ? "alert-success" : "alert-danger";
		var objPrefix = !string.IsNullOrEmpty(Msg.ObjectName) ? $"{Msg.ObjectName}: " : "";
		var title = objPrefix + (Msg.HasMessage() ? Msg.Message : $"Status: {(Msg.Success ? "Success" : "Failure")}");

		<div class="alert @alertClass" style="margin-left: 50px;font-size:80%" role="alert">
			<h4>@title</h4>
			<p>
				@if (Msg.DetailedMessages.Any())
				{
					<span>
						<b>Details: </b>
						@foreach (var msg in Msg.DetailedMessages)
						{
							@msg <br />
						}
					</span>
				}
				@if (Msg.GetRelatedException() != null)
				{
					<br />
					<pre>@Msg.GetRelatedException().Message</pre>
					ExceptionDetailsLink(Msg.GetRelatedException());
				}
			</p>
			@if (Msg.InnerStatuses.Any())
			{
				foreach (var innerStatus in Msg.InnerStatuses)
				{
					RenderMessage(innerStatus);
				}
			}
		</div>
	}

	private void ExceptionDetailsLink(Exception ExceptionModel)
	{
		var exceptionJson = JsonConvert.SerializeObject(ExceptionModel);

		<!form action="/umbraco/backoffice/Dragonfly/DeployTools/ViewException" method="post">
					@Html.Hidden("ExceptionJson", exceptionJson)
				<button class="btn btn-info btn-sm" value="Submit" type="Submit"><small>Exception Details...</small></button>
		</!form>
	}

}
